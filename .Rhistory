seg_ot2 <- vector()
seg_ot2[1] <- segdata$fName
seg_ot2[2] <- segdata[, grep('source type',names(segdata))] %>% pp(paraname = 'source type, atten type, sampleStep (km), dirflag(0=no directivity effect), synchron')
seg_ot2[3] <- segdata[, grep('aleatory seg',names(segdata))] %>% pp(paraname = 'aleatory seg wt.')
#check source type-npts-geometry
stype <- seg_ot2[2]
stype <- substr(stype, 0, 2) %>% as.numeric()
#npts part
if (stype == 1 | stype == 2){
seg_ot2_npts1 <- segdata[, grep('^dip, ', names(segdata))] %>% pp(paraname = 'dip, depth to top')
seg_ot2_npts2 <- segdata[, grep('npts', names(segdata))] %>% pp(paraname = 'npts')
seg_ot2[4] <- paste(seg_ot2_npts1, seg_ot2_npts2, sep = '\r\n')
seg_ot2[5] <- segdata[, grep('geometry', names(segdata))]  #geometry
} else if (stype == 3 | stype == 4){
seg_ot2[4] <- segdata[, grep('depth to top', names(segdata))] %>% pp(paraname = 'dip, depth to top')
seg_ot2[5] <- segdata[, grep('geometry', names(segdata))]  #filename
} else if (stype == 5 | stype == -5){
seg_ot2[4] <- segdata[, grep('npts', names(segdata))] %>% pp(paraname = 'npts')
seg_ot2[5] <- segdata[, grep('geometry', names(segdata))]  #geometry
}
#number of dip
if (stype == 5 | stype == -5){
seg_ot2[6] <- NA
} else {
seg_ot2_dip1 <- segdata[, grep('^number of dip', names(segdata))] %>% pp(paraname = 'number of dip variations')
seg_ot2_dip2 <- segdata[, grep('^dip variations$|n_Dip values of DeltaDip', names(segdata))] %>% pp(paraname = names(segdata)[grep('^dip variations$|n_Dip values of DeltaDip', names(segdata))])
seg_ot2_dip3 <- segdata[, grep('^wt for dip|n_Dip values of dipWt', names(segdata))] %>% pp(paraname = names(segdata)[grep('^wt for dip|n_Dip values of dipWt', names(segdata))])
seg_ot2[6] <- paste(seg_ot2_dip1, seg_ot2_dip2, seg_ot2_dip3, sep = '\r\n')
}
#number of b-value
seg_ot2_b1 <- segdata[, grep('^number of b-values', names(segdata))] %>% pp(paraname = 'number of b-values')
if (as.numeric(substr(seg_ot2_b1, 0, 2)) > 0){
seg_ot2_b2 <- segdata[, grep('^b-values', names(segdata))] %>% pp(paraname = 'b-values')
seg_ot2_b3 <- segdata[, grep('^weights for b-values', names(segdata))] %>% pp(paraname = 'weights for b-values')
seg_ot2[7] <- paste(seg_ot2_b1, seg_ot2_b2, seg_ot2_b3, sep = '\r\n')
} else {
seg_ot2[7] <- seg_ot2_b1
}
#number of activity rate
seg_ot2_ar1 <- segdata[, grep('^number of Act. Rates|number of activity rates', names(segdata))] %>% pp(paraname = 'number of Act. Rates')
if (as.numeric(substr(seg_ot2_ar1, 0, 2)) == 3){
seg_ot2_ar2 <- segdata[, grep('mLH b_value-std', names(segdata))] %>% pp(paraname = 'mLH b_value-std, act rate (N(m0=5.0)), wts')
seg_ot2_ar3 <- segdata[, grep('^mLH b_value,|mLH b_value\\s{1,}', names(segdata))] %>% pp(paraname = 'mLH b_value    , act rate (N(m0=5.0)), wts')
seg_ot2_ar4 <- segdata[, grep('mLH b_value\\+std', names(segdata))] %>% pp(paraname = 'mLH b_value+std, act rate (N(m0=5.0)), wts')
seg_ot2[8] <- paste(seg_ot2_ar1, seg_ot2_ar2, seg_ot2_ar3, seg_ot2_ar4, sep = '\r\n')
} else if (as.numeric(substr(seg_ot2_ar1, 0, 2)) == 1){
seg_ot2_ar2 <- segdata[, grep('^mLH b_value,|mLH b_value\\s{1,}', names(segdata))] %>% pp(paraname = 'mLH b_value    , act rate (N(m0=5.0)), wts')
seg_ot2[8] <- paste(seg_ot2_ar1, seg_ot2_ar2, sep = '\r\n')
} else if (as.numeric(substr(seg_ot2_ar1, 0, 2)) == 0) {
seg_ot2[8] <- seg_ot2_ar1
}
#weights for sr, activity rate, rec int, MoRate branches
seg_ot2[9] <- segdata[, grep('weights for sr', names(segdata))] %>% pp(paraname = 'weights for sr, activity rate, rec int, MoRate branches')
#number of slip rate/vertical rate
seg_ot2_sr1 <- segdata[, grep('^number of slip-rates|^number of vertical rates', names(segdata))] %>%
pp(paraname = names(segdata)[grep('^number of slip-rates|^number of vertical rates', names(segdata))])
if (as.numeric(substr(seg_ot2_sr1, 0, 2)) > 0){
srvr <- segdata[, grep('^slip-rates|^slip rates|^vertical rates', names(segdata))]
srvr <- word(srvr, sep = fixed(' '))
if (srvr != -999){
seg_ot2_sr2 <- segdata[, grep('^slip-rates|^slip rates', names(segdata))] %>%
pp(paraname = names(segdata)[grep('^slip-rates|^slip rates', names(segdata))])
seg_ot2_sr3 <- segdata[, grep('^weights for slip rates', names(segdata))] %>%
pp(paraname = names(segdata)[grep('^weights for slip rates', names(segdata))])
seg_ot2[10] <- paste(seg_ot2_sr1, seg_ot2_sr2, seg_ot2_sr3, sep = '\r\n')
} else if (srvr == -999){
seg_ot2_sr2 <- segdata[, grep('^vertical rates \\(mm/yr\\)|^slip-rates|^slip rates', names(segdata))] %>%
pp(paraname = names(segdata)[grep('^vertical rates \\(mm/yr\\)|^slip-rates|^slip rates', names(segdata))])
seg_ot2_sr3 <- segdata[, grep('^rake for each slip rate', names(segdata))] %>%
pp(paraname = names(segdata)[grep('^rake for each slip rate', names(segdata))])
seg_ot2_sr4 <- segdata[, grep('^weights for slip rates', names(segdata))] %>%
pp(paraname = names(segdata)[grep('^weights for slip rates', names(segdata))])
seg_ot2[10] <- paste(seg_ot2_sr1, seg_ot2_sr2, seg_ot2_sr3, seg_ot2_sr4, sep = '\r\n')
}
} else if(as.numeric(substr(seg_ot2_sr1, 0, 2)) == 0){
seg_ot2[10] <- seg_ot2_sr1
}
#nRecint
seg_ot2_ri1 <- segdata[, grep('^number of rec', names(segdata))] %>% pp(paraname = 'number of rec int')
if (as.numeric(substr(seg_ot2_ri1, 0, 2)) > 0){
ri1 <- segdata[, grep('^recint', names(segdata))] %>% pp(paraname = 'recint')
ri2 <- segdata[, grep('^weights for recint|^wts for recint|^wt_recint', names(segdata))] %>% pp(paraname = 'weights for recint')
ri <- cbind(ri1, ri2) %>% t() %>% as.vector()
seg_ot2_ri2 <- combine_words(ri, sep = '\r\n', and = '')
seg_ot2[11] <- paste(seg_ot2_ri1, seg_ot2_ri2, sep = '\r\n')
} else if(as.numeric(substr(seg_ot2_ri1, 0, 2)) == 0){
seg_ot2[11] <- seg_ot2_ri1
}
#moment rates
seg_ot2_mr1 <- segdata[, grep('^number of moment rates|^number MoRates', names(segdata))] %>% pp(paraname = 'number of moment rates')
if (as.numeric(substr(seg_ot2_mr1, 0, 2)) > 0){
mr1 <- segdata[, grep('^moRate', names(segdata))] %>% pp(paraname = 'moRate')
mr2 <- segdata[, grep('^moRate Depth', names(segdata))] %>% pp(paraname = 'moRate Depth')
mr3 <- segdata[, grep('^weights for moRate|^weights for MoRate|^wts for moRate|^wts for Morate|^wt_MoRate', names(segdata))] %>% pp(paraname = 'weights for moRate')
mr <- cbind(mr1, mr2, mr3) %>% t() %>% as.vector()
seg_ot2_mr2 <- combine_words(mr, sep = '\r\n', and = '')
seg_ot2[12] <- paste(seg_ot2_mr1, seg_ot2_mr2, sep = '\r\n')
} else if(as.numeric(substr(seg_ot2_mr1, 0, 2)) == 0){
seg_ot2[12] <- seg_ot2_mr1
}
#nRecur
seg_ot2_nrecur1 <- segdata[, grep('^nRecur', names(segdata))] %>% pp(paraname = 'nRecur')
seg_ot2_nrecur2 <- segdata[, grep('^recur model', names(segdata))] %>% pp(paraname = 'Recur model (0=Char, 1=exp, 3=max mag, 6=BC Hydro Char)')
seg_ot2_nrecur3 <- segdata[, grep('^char mag recurrence', names(segdata))] %>% pp(paraname = 'char mag recurrence, exponential mag recurrence weights')
if (as.numeric(substr(seg_ot2_nrecur1, 0, 2)) > 0){
seg_ot2_nrecur4 <- segdata[, grep('^delta_M1', names(segdata))] %>% pp(paraname = names(segdata)[grep('^delta_M1', names(segdata))])
seg_ot2_nrecur4 <- combine_words(seg_ot2_nrecur4, sep = '\r\n', and = '\r\n')
seg_ot2[13] <- paste(seg_ot2_nrecur1, seg_ot2_nrecur2, seg_ot2_nrecur3, seg_ot2_nrecur4, sep = '\r\n')
} else if(as.numeric(substr(seg_ot2_nrecur1, 0, 2)) == 0){
seg_ot2[13] <- paste(seg_ot2_nrecur1, seg_ot2_nrecur2, seg_ot2_nrecur3, sep = '\r\n')
}
#nThick
if (stype == 5){  #if source type == 5, skip nTHick, fault thickness, wts for fault thickness
seg_ot2_nthick4 <- segdata[, grep('^depth pdf model', names(segdata))] %>% pp(paraname = 'depth pdf model and parameters')
th1 <- segdata[, grep('^number of maximum magnitudes', names(segdata))] %>% pp(paraname = 'number of maximum magnitudes')
th2 <- segdata[, grep('^reference magnitude|^maximum magnitudes', names(segdata))] %>% pp(paraname = 'reference magnitude')
th3 <- segdata[, grep('^weights for max mag', names(segdata))] %>% pp(paraname = 'weights for max mag')
nthick <- cbind(th1, th2, th3) %>% t() %>% as.vector()
seg_ot2_nthick5 <- combine_words(nthick, sep = '\r\n', and = '')
seg_ot2[14] <- paste(seg_ot2_nthick4, seg_ot2_nthick5, sep = '\r\n')
} else {
seg_ot2_nthick1 <- segdata[, grep('^nTHick|number of fault thickness|number of fault widths', names(segdata))] %>% pp(paraname = 'nTHick')
seg_ot2_nthick2 <- segdata[, grep('^fault thickness$|^thickness$|^fault width', names(segdata))] %>% pp(paraname = 'thickness')
seg_ot2_nthick3 <- segdata[, grep('^thickness weighting|weights for fault thickness|weights for fault widths', names(segdata))] %>% pp(paraname = 'thickness weighting')
seg_ot2_nthick4 <- segdata[, grep('^depth pdf model', names(segdata))] %>% pp(paraname = 'depth pdf model and parameters')
if (as.numeric(substr(seg_ot2_nthick1, 0, 2)) > 0){
th1 <- segdata[, grep('^number of maximum magnitudes', names(segdata))] %>% pp(paraname = 'number of maximum magnitudes')
th2 <- segdata[, grep('^reference magnitude|^maximum magnitudes', names(segdata))] %>% pp(paraname = 'reference magnitude')
th3 <- segdata[, grep('^weights for max mag', names(segdata))] %>% pp(paraname = 'weights for max mag')
nthick <- cbind(th1, th2, th3) %>% t() %>% as.vector()
seg_ot2_nthick5 <- combine_words(nthick, sep = '\r\n', and = '')
seg_ot2[14] <- paste(seg_ot2_nthick1, seg_ot2_nthick2, seg_ot2_nthick3, seg_ot2_nthick4, seg_ot2_nthick5, sep = '\r\n')
} else if(as.numeric(substr(seg_ot2_nthick1, 0, 2)) == 0){
seg_ot2[14] <- paste(seg_ot2_nthick1, seg_ot2_nthick2, seg_ot2_nthick3, seg_ot2_nthick4, sep = '\r\n')
}
}
seg_ot2[15] <- segdata[, grep('^minmag, magstep, hxStep',names(segdata))] %>% pp(paraname = 'minmag, magstep, hxStep, hzStep, nRupArea, nRupWidth, minDepth')
seg_ot2[16] <- segdata[, grep('^rupArea',names(segdata))] %>% pp(paraname = 'rupArea: a, b, sigma in log10 units. W&C all')
seg_ot2[17] <- segdata[, grep('^rupWidth',names(segdata))] %>% pp(paraname = 'rupWidth: a, b, sigma in log10 units. W&C all')
#number of Fault Mechanism Models
seg_ot2_fm1 <- segdata[, grep('^number of Fault Mechanism Models', names(segdata))] %>% pp(paraname = 'number of Fault Mechanism Models')
if (as.numeric(substr(seg_ot2_fm1, 0, 2)) > 0){
fm1 <- segdata[, grep('^fault Mech Model Wt', names(segdata))] %>% pp(paraname = 'fault Mech Model Wt')
fm2 <- segdata[, grep('^number of mechanisms', names(segdata))] %>% pp(paraname = 'number of mechanisms')
fm3 <- segdata[, grep('^ftype', names(segdata))] %>% pp(paraname = 'ftype')
fm4 <- segdata[, grep('^wts', names(segdata))] %>% pp(paraname = 'wts')
fm <- cbind(fm1, fm2, fm3, fm4) %>% t() %>% as.vector()
seg_ot2_fm2 <- combine_words(fm, sep = '\r\n', and = '')
seg_ot2[18] <- paste(seg_ot2_fm1, seg_ot2_fm2, sep = '\r\n')
} else if (as.numeric(substr(seg_ot2_fm1, 0, 2)) ==  0){
seg_ot2[18] <- seg_ot2_fm1
}
seg_ot2 <- seg_ot2 %>% data.frame()
rm(list = ls(pattern="seg_ot2_"))
ifelse(j == 1,
seg_ot2all <- seg_ot2,
seg_ot2all <- rbind(seg_ot2all, seg_ot2))
}
ot1ot2 <- rbind(seg_ot, seg_ot2all)
ot1ot2 <- ot1ot2[rowSums(is.na(ot1ot2)) != ncol(ot1ot2), ] %>% data.frame()
allall <- rbind(allall, ot1ot2) %>% as.vector()
}
unlink(outputname)
write.table(allall, file = outputname, quote = FALSE, row.names = FALSE, col.names = FALSE, na = "", append = TRUE)
return(allall)
}
cc <- table2fort(1,aa, 'hoho.txt')
library(devtools)
document()
setwd("~/Desktop/Sinotech_08/HAZ.TW")
document()
load_all()
build()
check()
build()
check()
devtools::use_vignette("my-vignette")
browseVignettes("ggplot2")
browseVignettes("packagename")
browseVignettes("stringr")
browseVignettes("dplyr")
browseVignettes("dplyr")
devtools::use_vignette("my-vignette")
use_vignette(haztw_vignette)
use_vignette('haztw_vignette')
library(HAZ.TW)
tabfile <- 'SSHAC_Fault.TAB'
newname <- 'tab_output.txt'
fig_info <- fig_information(tabfile, newname)
setwd(path)
faultfile <- '/Users/chieh/Desktop/Sinotech_08/TW_all/data source/AllSource_NTW_WM#6_0531.dat'
f2t <- fort2table(faultfile)
f2t <- fort2table(faultfile)
library(HAZ.TW)
setwd('/Users/chieh/Desktop/Sinotech_08/TW_all/data source')
faultfile <- 'AllSource_NTW_WM#6_0531.dat'
f2t <- fort2table(faultfile)
?knitr::knit
root.dir
faultfile <- '/Users/chieh/Desktop/Sinotech_08/TW_all/data source/AllSource_NTW_WM#6_0531.dat'
f2t <- fort2table(faultfile)
library(HAZ.TW)
path <- '/Users/chieh/Desktop/Sinotech_08/TW_all/data source'
faultfile <- 'AllSource_NTW_WM#6_0531.dat'
setwd(path)
read_f <- read_fault(path, faultfile)
plotall <- plot_all(faultfile)
plotall <- plot_all(read_f)
f2t <- fort2table(faultfile)
path <- '/Users/chieh/Desktop/Sinotech_08/TW_all/data source'
faultfile <- 'AllSource_NTW_WM#6_0531.dat'
setwd(path)
read_f <- read_fault(path, faultfile)
summary(read_f)
read_fault(path, faultfile)
rm(read_f)
read_fault(path, faultfile)
t
read_f <- read_fault(path, faultfile)
f2t <- fort2table(faultfile)
fort2table(faultfile)
t2f <- table2fort(1, f2t, 'f2t.txt')
plotall <- plot_all(read_f)
plotall
plot_segment(read_f, 23)
plotall
rprojroot::find_rstudio_root_file()
find_rstudio_root_file()
library(HAZ.TW)
path <- '/Users/chieh/Desktop/Sinotech_08/TW_all/data source'
faultfile <- 'AllSource_NTW_WM#6_0531.dat'
plotseg <- plot_segment(read_f, 8)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 5)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 30)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 40)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 50)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 64)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 8)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 5)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 6)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 7)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 12)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 13)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 14)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 15)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 20)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 25)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 28)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 35)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 2)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 3)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 4)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 6)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 7)
#return a leaflet map
plotseg
plotseg <- plot_segment(read_f, 7:10)
#return a leaflet map
plotseg
# set icoor == 1
t2f <- table2fort(1, f2t, 'f2t.txt')
# output the table to .txt file
head(t2f)
f2t <- fort2table(faultfile)
read_f <- read_fault(path, faultfile)
# return a list of 64 faults.
head(read_f)
setwd(path)
f2t <- fort2table(faultfile)
# return a table
head(f2t)
# set icoor == 1
t2f <- table2fort(1, f2t, 'f2t.txt')
# output the table to .txt file
kable(t2f)
# set icoor == 1
t2f <- table2fort(1, f2t, 'f2t.txt')
# output the table to .txt file
kable(t2f)
# set icoor == 1
t2f <- table2fort(1, f2t, 'f2t.txt')
# output the table to .txt file
knitr::kable(t2f, format = "html")
library(magrittr)
library(kableExtra)
library(HAZ.TW)
path <- '/Users/chieh/Desktop/Sinotech_08/TW_all/data source'
faultfile <- 'AllSource_NTW_WM#6_0531.dat'
figinfo <- fig_information('SSHAC_Fault.TAB', 'figinfo.txt')
ff <- fig_information(SSHAC_Fault.TAB)
ff <- fig_information('SSHAC_Fault.TAB','ff.txt')
ff <- fig_information('SSHAC_Fault.TAB','ff.txt')
rm(f2t,t2f,ff)
figinfo <- fig_information('SSHAC_Fault.TAB', 'figinfo.txt')
setwd(path)
figinfo <- fig_information('SSHAC_Fault.TAB', 'figinfo.txt')
kable(figinfo) %>% kable_styling() %>% scroll_box(height = '800px')
setwd(path)
figinfo <- fig_information('SSHAC_Fault.TAB', 'figinfo.txt')
kable(figinfo) %>% kable_styling() %>% scroll_box(height = '800px')
load_all()
setwd("~/Desktop/Sinotech_08/HAZ.TW")
load_all()
build()
check()
setwd(path)
figinfo <- fig_information('SSHAC_Fault.TAB', 'figinfo.txt')
formattable::formattable(figinfo,
align = c("l",rep("r", NCOL(oft))))
library(magrittr)
library(formattable)
library(HAZ.TW)
path <- '/Users/chieh/Desktop/Sinotech_08/TW_all/data source'
faultfile <- 'AllSource_NTW_WM#6_0531.dat'
setwd(path)
figinfo <- fig_information('SSHAC_Fault.TAB', 'figinfo.txt')
formattable::formattable(figinfo,
align = c("l",rep("r", NCOL(oft))))
setwd(path)
figinfo <- fig_information('SSHAC_Fault.TAB', 'figinfo.txt')
formattable::formattable(figinfo,
align = c("l",rep("r", NCOL(figinfo))))
formattable(figinfo)
setwd(path)
figinfo <- fig_information('SSHAC_Fault.TAB', 'figinfo.txt')
formattable(figinfo)
rm(figinfo)
load_all()
build()
build()
check()
HAZ.TW::fig_information('SSHAC_Fault.TAB','ff.txt')
build()
library(HAZ.TW)
setwd(path)
path <- '/Users/chieh/Desktop/Sinotech_08/TW_all/data source'
setwd(path)
f2t <- fort2table(faultfile)
setwd(path)
figinfo <- fig_information('SSHAC_Fault.TAB', 'figinfo.txt')
formattable(figinfo, align = c("l",rep("r", NCOL(figinfo))))
path <- '/Users/chieh/Desktop/Sinotech_08/TW_all/data source'
faultfile <- 'AllSource_NTW_WM#6_0531.dat'
setwd(path)
f2t <- fort2table(faultfile)
f2t <- fort2table(faultfile)
install.packages(c("boot", "classInt", "foreign", "ggplot2", "hms", "knitr", "nlme", "pkgbuild", "raster", "rmarkdown", "sys", "units", "xfun", "xml2"))
install.packages(c("boot", "classInt", "foreign", "ggplot2", "hms", "knitr", "nlme", "pkgbuild", "raster", "rmarkdown", "sys", "units", "xfun", "xml2"))
install.packages(c("boot", "classInt", "foreign", "ggplot2", "hms", "knitr", "nlme", "pkgbuild", "raster", "rmarkdown", "sys", "units", "xfun", "xml2"))
install.packages(c("boot", "classInt", "foreign", "ggplot2", "hms", "knitr", "nlme", "pkgbuild", "raster", "rmarkdown", "sys", "units", "xfun", "xml2"))
install.packages(c("boot", "classInt", "foreign", "ggplot2", "hms", "knitr", "nlme", "pkgbuild", "raster", "rmarkdown", "sys", "units", "xfun", "xml2"))
install.packages(c("boot", "classInt", "foreign", "ggplot2", "hms", "knitr", "nlme", "pkgbuild", "raster", "rmarkdown", "sys", "units", "xfun", "xml2"))
install.packages(c("boot", "classInt", "foreign", "ggplot2", "hms", "knitr", "nlme", "pkgbuild", "raster", "rmarkdown", "sys", "units", "xfun", "xml2"))
devtools::load_all()
setwd("~/Desktop/Sinotech_08/HAZ.TW")
devtools::load_all()
document()
devtools::document()
setwd("~/Desktop/Sinotech_08/HAZ.TW")
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::build()
setwd(path)
f2t <- fort2table(faultfile)
fort2table(faultfile)
class(f2t)
devtools::load_all()
setwd("~/Desktop/Sinotech_08/HAZ.TW")
devtools::load_all()
devtools::document()
devtools::build()
devtools::check()
install.packages("devtools")
devtools::install_github("Chieh-Lee/HAZ.TW")
rm(f2t)
ff <- figinfo('/Users/chieh/Desktop/Sinotech_08/TW_all/data source/SSHAC_Fault.TAB','ff.txt')
figinfo <- function(tabfile, outputname){
dfall <- st_read(tabfile) %>% data.frame()
#df = data exclude lon/lat geometry
df <- dfall[, -which(names(dfall) == 'geometry')]
df <- data.frame(lapply(df, as.character), stringsAsFactors = FALSE)
##extract lon/lat geometry
df_lonlat <- dfall[, which(names(dfall) == 'geometry')]
for (i in 1:length(df_lonlat)){
n1 <- df_lonlat [[i]] %>% as.numeric() %>% unlist()
n1 <- matrix(n1, (length(n1)/2), 2, byrow = FALSE) %>% data.frame()
df$npts[i] <- nrow(n1)
n2 <- sapply(1:nrow(n1), function(j){
paste(n1[j, 1], n1[j, 2], sep = '\t')
})
df$lonlat[i] <- paste(n2, collapse = '\n')
}
##combine and remove
combine_all <- function(char, df){
value_df <- df[, grep(char, names(df))]
value = data.frame()
for (i in 1:nrow(value_df)){
value[i,1] <- do.call(paste, value_df[i, ])
}
vtitle <- combine_words(names(value_df), sep = " ", and = ' ') %>% as.character() #library(knitr)
df[, grep(char, names(df))] <- NULL
df <- cbind(df, value)
colnames(df)[ncol(df)] <- vtitle
return(df)
}
df <- combine_all('SR', df)
df <- combine_all('VR', df)
df <- combine_all('Dip', df)
df <- combine_all('Depth', df)
if (file.exists(outputname)) warning('File exists. Please set a new outputname.')
for (i in 1:nrow(df)){
for (j in 1:ncol(df)){
cc <- paste(df[i, j], names(df[j]), sep = '\t\t')
write.table(cc, file = outputname, quote = FALSE, row.names = FALSE, col.names = FALSE, na = "NA", append = TRUE)
}
}
return(df)
}
ff <- figinfo('/Users/chieh/Desktop/Sinotech_08/TW_all/data source/SSHAC_Fault.TAB','ff1.txt')
View(ff)
View(ff)
View(ff)
tabfile <- '/Users/chieh/Desktop/Sinotech_08/TW_all/data source/SSHAC_Fault.TAB'
dfall <- st_read(tabfile) %>% data.frame()
#df = data exclude lon/lat geometry
df <- dfall[, -which(names(dfall) == 'geometry')]
df <- data.frame(lapply(df, as.character), stringsAsFactors = FALSE)
##extract lon/lat geometry
df_lonlat <- dfall[, which(names(dfall) == 'geometry')]
for (i in 1:length(df_lonlat)){
n1 <- df_lonlat [[i]] %>% as.numeric() %>% unlist()
n1 <- matrix(n1, (length(n1)/2), 2, byrow = FALSE) %>% data.frame()
df$npts[i] <- nrow(n1)
n2 <- sapply(1:nrow(n1), function(j){
paste(n1[j, 1], n1[j, 2], sep = '\t')
})
df$lonlat[i] <- paste(n2, collapse = '\n')
}
##combine and remove
combine_all <- function(char, df){
value_df <- df[, grep(char, names(df))]
value = data.frame()
for (i in 1:nrow(value_df)){
value[i,1] <- do.call(paste, value_df[i, ])
}
vtitle <- combine_words(names(value_df), sep = " ", and = ' ') %>% as.character() #library(knitr)
df[, grep(char, names(df))] <- NULL
df <- cbind(df, value)
colnames(df)[ncol(df)] <- vtitle
return(df)
}
df <- combine_all('SR', df)
df <- combine_all('VR', df)
df <- combine_all('Dip', df)
df <- combine_all('Depth', df)
View(df)
install.packages(XQuartz)
install.packages('XQuartz')
install.packages('X11')
check_for_XQuartz()
library(sf)
View(df)
View(df_lonlat)
library(knitr)
dfall <- st_read(tabfile) %>% data.frame()
View(dfall)
View(dfall)
