test.f2<-table.output("/Users/chieh/Desktop/Sinotech_08/TW_all/data source/AllSource_NTW_WM#6_0531.dat",17)
formattable(test.f2,
align = c("l",rep("r", NCOL(test.f2))))
dfr <- gg.2[[i]][[j]][[5]][[3]]
View(dfr)
s = SpatialPixelsDataFrame(dfr[,c('X1', 'X2')], data = dfr)
dfr <- gg.2[[i]][[j]][[5]][[3]] %>% SpatialPoints() %>% SpatialPixels()
dfr <- gg.2[[i]][[j]][[5]][[3]]
class(dfr)
#dfr<-gg.2[[i]][[j]][[5]][[2]]
coor <- data.frame(gg.2[[i]][[j]][[5]][[3]][[-3]])
#dfr<-gg.2[[i]][[j]][[5]][[2]]
coor <- data.frame(gg.2[[i]][[j]][[5]][[3]][[1]])
View(coor)
#dfr<-gg.2[[i]][[j]][[5]][[2]]
lon <- gg.2[[i]][[j]][[5]][[3]][[1]]
lat <- gg.2[[i]][[j]][[5]][[3]][[2]]
coor <- cbind(lon,lat)
coor <- cbind(lon,lat) %>% SpatialPoints() %>% SpatialPixels()
s = SpatialPixelsDataFrame(coor], data = dfr)
s = SpatialPixelsDataFrame(coor)], data = dfr)
s = SpatialPixelsDataFrame(coor, data = dfr)
crs(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
s = raster(s)
for (i in c(1:(length(gg.2)))){
for (j in c(1:(length(gg.2[[i]])))){
if ( gg.2[[i]][[j]][[2]][[1]] == 1 | gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 1|2
m <- data.matrix(gg.2[[i]][[j]][[length(gg.2[[i]][[j]])]])
} else if( gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){
#dfr<-gg.2[[i]][[j]][[5]][[2]]
lon <- gg.2[[i]][[j]][[5]][[3]][[1]]
lat <- gg.2[[i]][[j]][[5]][[3]][[2]]
coor <- cbind(lon,lat) %>% SpatialPoints() %>% SpatialPixels()
dfr <- gg.2[[i]][[j]][[5]][[3]] %>% SpatialPoints() %>% SpatialPixels()
s = SpatialPixelsDataFrame(coor, data = dfr)
crs(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
s = raster(s)
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
###plot map##
if (gg.2[[i]][[j]][[2]][[1]]==1){ #type = 1
map <- addPolylines(map, data= m, color='blue', popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]]==2){ #type = 2
map <- addPolygons(map, data = m, color = 'red' ,popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]), fill=FALSE)
} else if(gg.2[[i]][[j]][[2]][[1]]==3|gg.2[[i]][[j]][[2]][[1]]==4){ #type = 3|4
map <- addRasterImage(map, s, color = palette[j] ,opacity = 0.7 ) %>%
addMarkers(mean(dfr[[1]]), mean(dfr[[2]]), label = paste(gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]]==5|gg.2[[i]][[j]][[2]][[1]]==-5){
#type=5
}
}
}
s = SpatialPixelsDataFrame(coor, data = dfr)
crs(s) <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
CRS(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
CRS(s) <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
proj4string(s)
proj4string(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
s = raster(s)
###plot map##
if (gg.2[[i]][[j]][[2]][[1]] == 1){ #type = 1
map <- addPolylines(map, data= m, color='blue', popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 2
map <- addPolygons(map, data = m, color = 'red' ,popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]), fill=FALSE)
} else if(gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){ #type = 3|4
map <- addRasterImage(map, s, color = palette[j] ,opacity = 0.7 ) %>%
addMarkers(mean(dfr[[1]]), mean(dfr[[2]]), label = paste(gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
library(raster)
s = raster(s)
###plot map##
if (gg.2[[i]][[j]][[2]][[1]] == 1){ #type = 1
map <- addPolylines(map, data= m, color='blue', popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 2
map <- addPolygons(map, data = m, color = 'red' ,popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]), fill=FALSE)
} else if(gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){ #type = 3|4
map <- addRasterImage(map, s, color = palette[j] ,opacity = 0.7 ) %>%
addMarkers(mean(dfr[[1]]), mean(dfr[[2]]), label = paste(gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
for (i in c(1:(length(gg.2)))){
for (j in c(1:(length(gg.2[[i]])))){
if ( gg.2[[i]][[j]][[2]][[1]] == 1 | gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 1|2
m <- data.matrix(gg.2[[i]][[j]][[length(gg.2[[i]][[j]])]])
} else if( gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){
#dfr<-gg.2[[i]][[j]][[5]][[2]]
lon <- gg.2[[i]][[j]][[5]][[3]][[1]]
lat <- gg.2[[i]][[j]][[5]][[3]][[2]]
coor <- cbind(lon,lat) %>% SpatialPoints() %>% SpatialPixels()
dfr <- gg.2[[i]][[j]][[5]][[3]] %>% SpatialPoints() %>% SpatialPixels()
s = SpatialPixelsDataFrame(coor, data = dfr)
proj4string(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
s = raster(s)
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
###plot map##
if (gg.2[[i]][[j]][[2]][[1]] == 1){ #type = 1
map <- addPolylines(map, data= m, color='blue', popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 2
map <- addPolygons(map, data = m, color = 'red' ,popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]), fill=FALSE)
} else if(gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){ #type = 3|4
map <- addRasterImage(map, s, color = palette[j] ,opacity = 0.7 ) %>%
addMarkers(mean(dfr[[1]]), mean(dfr[[2]]), label = paste(gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
}
}
dplyr::glimpse(s)
s = SpatialPixelsDataFrame(coor, data = dfr)
proj4string(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
dplyr::glimpse(s)
View(gg.2)
dfr<-gg.2[[i]][[j]][[5]][[3]]
s = SpatialPixelsDataFrame(dfr[,c('X1', 'X2')], data = dfr)
tt=dfr[,c('X1', 'X2')]
View(tt)
s = SpatialPixelsDataFrame(dfr[,c('X1', 'X2')], data = dfr)
dplyr::glimpse(s)
s <- SpatialPointsDataFrame(coords = dfr[,c('X1', 'X2')], data = dfr,
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
dplyr::glimpse(s)
lon <- gg.2[[i]][[j]][[5]][[3]][[1]]
lat <- gg.2[[i]][[j]][[5]][[3]][[2]]
coord_s <- cbind(lon,lat) %>% SpatialPoints() %>% SpatialPixels()
s <- SpatialPointsDataFrame(coords = coords, data = dfr,
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
s <- SpatialPointsDataFrame(coords = coord_s, data = dfr,
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
s = raster(s)
###plot map##
if (gg.2[[i]][[j]][[2]][[1]] == 1){ #type = 1
map <- addPolylines(map, data= m, color='blue', popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 2
map <- addPolygons(map, data = m, color = 'red' ,popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]), fill=FALSE)
} else if(gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){ #type = 3|4
map <- addRasterImage(map, s, color = palette[j] ,opacity = 0.7 ) %>%
addMarkers(mean(dfr[[1]]), mean(dfr[[2]]), label = paste(gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
library(rgdal)
install.packages('rgdal')
library(rgdal)
###plot map##
if (gg.2[[i]][[j]][[2]][[1]] == 1){ #type = 1
map <- addPolylines(map, data= m, color='blue', popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 2
map <- addPolygons(map, data = m, color = 'red' ,popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]), fill=FALSE)
} else if(gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){ #type = 3|4
map <- addRasterImage(map, s, color = palette[j] ,opacity = 0.7 ) %>%
addMarkers(mean(dfr[[1]]), mean(dfr[[2]]), label = paste(gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
library(sf)
install.packages(;sf)
install.packages('sf')
library(sf)
rm(lat,lon)
# dfr <- gg.2[[i]][[j]][[5]][[3]] %>% SpatialPoints() %>% SpatialPixels()
# s = SpatialPixelsDataFrame(coor, data = dfr)
# proj4string(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# s = raster(s)
coordinates(coord_s) <- dfr[,c('X1', 'X2')]
rm9coord_s
rm(coord_s)
#coord_s <- cbind(lon,lat) %>% SpatialPoints() %>% SpatialPixels()
# dfr <- gg.2[[i]][[j]][[5]][[3]] %>% SpatialPoints() %>% SpatialPixels()
# s = SpatialPixelsDataFrame(coor, data = dfr)
# proj4string(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# s = raster(s)
coordinates(coord_s) <- dfr[,c('X1', 'X2')]
#coord_s <- cbind(lon,lat) %>% SpatialPoints() %>% SpatialPixels()
# dfr <- gg.2[[i]][[j]][[5]][[3]] %>% SpatialPoints() %>% SpatialPixels()
# s = SpatialPixelsDataFrame(coor, data = dfr)
# proj4string(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# s = raster(s)
coordinates(dfr) <- dfr[,c('X1', 'X2')]
dfr <- gg.2[[i]][[j]][[5]][[3]]
#coord_s <- cbind(lon,lat) %>% SpatialPoints() %>% SpatialPixels()
# dfr <- gg.2[[i]][[j]][[5]][[3]] %>% SpatialPoints() %>% SpatialPixels()
# s = SpatialPixelsDataFrame(coor, data = dfr)
# proj4string(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# s = raster(s)
coordinates(dfr) <- dfr[,c('X1', 'X2')]
tt = dfr[,c('X1', 'X2')]
View(tt)
coordinates(dfr) <- c('X1', 'X2')
View(dfr)
str(drf)
str(dfr)
dfr$X1 <- as.numeric(as.factor(dfr$X1))
str(dfr)
dfr$X2 <- as.numeric(as.factor(dfr$X2))
coordinates(dfr) <- c('X1', 'X2')
s <- SpatialPointsDataFrame(coords = dfr, data = dfr,
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
s <- SpatialPointsDataFrame(dfr, data = dfr,
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
dfr <- gg.2[[i]][[j]][[5]][[3]]
#dfr<-gg.2[[i]][[j]][[5]][[2]]
lon <- gg.2[[i]][[j]][[5]][[3]][[1]]
lat <- gg.2[[i]][[j]][[5]][[3]][[2]]
coord_s <- cbind(lon,lat) %>% as.factor() %>% as.numeric()
coordinates(coord_s) <- c('lon', 'lat')
coord_s <- cbind(lon,lat) %>% data.frame() %>% as.factor() %>% as.numeric()
#dfr<-gg.2[[i]][[j]][[5]][[2]]
lon <- gg.2[[i]][[j]][[5]][[3]][[1]]
lat <- gg.2[[i]][[j]][[5]][[3]][[2]]
coord_s <- cbind(lon,lat) %>% data.frame() %>% as.factor() %>% as.numeric()
coord_s <- cbind(lon,lat) %>% data.frame() #%>% as.factor() %>% as.numeric()
View(coord_s)
str(coord_s)
rm(coor,coord_s,dfr,s,tt,lat,lon)
dfr <- gg.2[[i]][[j]][[5]][[3]]
dfr$X1 <- as.numeric(as.factor(dfr$X1))
dfr$X2 <- as.numeric(as.factor(dfr$X2))
coordinates(coord_s) <- c('lon', 'lat')
coordinates(dfr) <- c('lon', 'lat')
coordinates(dfr) <- c('X1', 'X2')
is.projected(dfr)
proj4string(dfr) <- CRS("+init=epsg:4326")
is.projected(dfr)
is.projected(dfr)
writeOGR(dfr, "dfr", "dfr", driver = "ESRI Shapefile")
dfr
plot(dfr)
system.time(test3<-fault.src3("/Users/chieh/Desktop/Sinotech_08/TW_all/data source/AllSource_NTW_WM#6_0531.dat",1,64))
####function_3_faster.#####
fault.src3 <- function(fault.src3,startnum,endnum){
f1 <- scan(fault.src3,what = 'c',sep = '\n',allowEscapes = TRUE,quiet = TRUE) %>% data.frame()
fvalue <- as.character(word(f1[, 1], sep = fixed('\t\t'))) %>% data.frame()
fvalue <- as.character(gsub("\t{1,}"," ",fvalue[,1]),1) %>% data.frame() #fvalue-only value
segname <- grep("@@", as.character(as.matrix.data.frame(fvalue))) %>% data.frame() #segname-no. of each fault segemnt
fname <- as.character(word(f1[, 1], -1, sep = fixed('\t\t'))) %>% data.frame()
fname <- as.character(gsub("\t{1,}"," ",fname[,1]),1) %>% data.frame()
fname <- as.character(gsub(" ,",",",fname[,1]),1) %>% data.frame() #fname-only name of parameters
all<-lapply(1:nrow(segname), function(i){
ggvalue = list() ; ggname = list()
if (i < (dim(segname)[1])) {
ggvalue <- fvalue[ (segname[i, 1]) : (segname[i+1, 1]-1), 1]
ggname <- fname[ (segname[i, 1]) : (segname[i+1, 1]-1), 1]
} else if (i == (dim(segname)[1])) {
ggvalue <- fvalue[ (segname[i, 1]) : (dim(fvalue)[1]), 1]
ggname <- fname[ (segname[i, 1]) : (dim(fvalue)[1]), 1]
}
return(list(ggname, ggvalue))
})
gg.2 <- lapply(startnum:endnum, function(i){
no_seg <- grep('^[A-Z]+', all[[i]][[2]]) %>% data.frame()
lapply (1 : nrow(no_seg), function(k){
if (k < nrow(no_seg)) {
ggvalue.3 <- data.frame(all[[i]][[2]])[(no_seg[k,1]) : (no_seg[k+1,1]-1), 1]
ggname.3 <- data.frame(all[[i]][[1]])[(no_seg[k,1]) : (no_seg[k+1,1]-1), 1] %>% as.character()
ca <- sapply(1:length(ggvalue.3),function(x){
b <- grep('^[A-Za-z]+', ggvalue.3)
ifelse(x %in% b,
ca<-strsplit(as.character(ggvalue.3[x]), "\\s") ,
ca<-strsplit(as.character(ggvalue.3[x]), "\\s") %>% unlist() %>% as.numeric() %>% na.omit() %>% list()
)
})
ggname.3[1] <-'fName'; ca <- setNames(ca, ggname.3)
if (ca[[2]][[1]]==1|ca[[2]][[1]]==2){ #source_type=1|2
c1c1<-ca[c((5+1):(5+ca[[5]]))]%>%unlist()
ca[[length(ca)+1]] <- matrix(c1c1,(length(c1c1)/2),2,byrow = TRUE) %>% data.frame()
ca[c((5+1):(5+ca[[5]]))]<-NULL #remove lonlatpts
names(ca)[[length(ca)]] <- "npts_lonlat"
} else if ( ca[[2]][[1]] == 3 | ca[[2]][[1]] == 4) { #source_type=3|4
ca[[5]] <- as.character(ca[[5]])
Data1 <- scan(ca[[5]],what = 'c',sep = '\n', allowEscapes = TRUE, quiet = TRUE)
D1_1 <- Data1[1:3] #information
D1_2 <- Data1[4:length(Data1)];D1_2 <- unlist(str_split(D1_2," ")) #location
D1_3 <- matrix(D1_2,(length(D1_2)/3),3,byrow = TRUE) %>% data.frame()
ca[[5]]<-list(as.character(ca[[5]]),D1_1,D1_3)
} else if ( ca[[2]][[1]] == 5 | ca[[2]][[1]] == -5) { #source_type=5
cc<-matrix(unlist(ca[c((4+1)):(4+ca[[4]][[2]])]),3*ca[[4]][[1]],ca[[4]][[2]]) #create lonlatpts df #ca[[5]]==npts
ca[[length(ca)+1]] <- data.frame(cc)
ca[c((4+1)):(4+ca[[4]][[2]])]<-NULL #remove lonlatpts
names(ca)[[length(ca)]] <- "npts_lonlat"
}
} else if (k == nrow(no_seg)) {
ggvalue.3 <- data.frame(all[[i]][[2]])[(no_seg[k,1]) : length(all[[i]][[2]]), 1]
ggname.3 <- data.frame(all[[i]][[1]])[(no_seg[k,1]) : length(all[[i]][[2]]), 1] %>% as.character()
b <- grep('^[A-Za-z]+', ggvalue.3)
ca<-sapply(1:length(ggvalue.3),function(x){
ifelse(x %in% b,
ca<-strsplit(as.character(ggvalue.3[x]), "\\s") ,
ca<-strsplit(as.character(ggvalue.3[x]), "\\s") %>% unlist() %>% as.numeric() %>% na.omit() %>% list())
})
ggname.3[1] <- 'fName'; ca <- setNames(ca, ggname.3)
if (ca[[2]][[1]] == 1 | ca[[2]][[1]] == 2){ #source_type=1|2
c1c1 <- ca[c((5+1) : (5 + ca[[5]]))] %>% unlist()
ca[[length(ca)+1]] <- matrix(c1c1, (length(c1c1)/2), 2, byrow = TRUE) %>% data.frame()
ca[c((5+1) : (5+ca[[5]]))] <- NULL #remove lonlatpts
names(ca)[[length(ca)]] <- "npts_lonlat"
} else if ( ca[[2]][[1]] == 3 | ca[[2]][[1]] == 4) { #source_type=3|4
ca[[5]] <- as.character(ca[[5]])
Data1 <- scan(ca[[5]],what = 'c',sep = '\n',allowEscapes = TRUE,quiet = TRUE)
D1_1 <- Data1[1:3] #information
D1_2 <- Data1[4:length(Data1)];D1_2 <- unlist(str_split(D1_2," ")) #location
D1_3 <- matrix(D1_2,(length(D1_2)/3),3,byrow = TRUE) %>% data.frame()
ca[[5]]<-list(as.character(ca[[5]]),D1_1,D1_3)
} else if ( ca[[2]][[1]] == 5 | ca[[2]][[1]] == -5) { #source_type=5
cc<-matrix(unlist(ca[c((4+1)):(4+ca[[4]][[2]])]),3*ca[[4]][[1]],ca[[4]][[2]]) #create lonlatpts df #ca[[5]]==npts
ca[[length(ca)+1]] <- data.frame(cc)
ca[c((4+1)):(4+ca[[4]][[2]])]<-NULL #remove lonlatpts
names(ca)[[length(ca)]] <- "npts_lonlat"
}
}
return(ca)
})
})
}
system.time(test3<-fault.src3("/Users/chieh/Desktop/Sinotech_08/TW_all/data source/AllSource_NTW_WM#6_0531.dat",1,64))
gg.2<-mapver2(test.f2)
gg.2 <- test.3
gg.2 <- test3
#gg.2<-fault.srcin
for (i in c(1:(length(gg.2)))){
for (j in c(1:(length(gg.2[[i]])))){
if ( gg.2[[i]][[j]][[2]][[1]] == 1 | gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 1|2
m <- data.matrix(gg.2[[i]][[j]][[length(gg.2[[i]][[j]])]])
} else if( gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){
#dfr<-gg.2[[i]][[j]][[5]][[2]]
# dfr <- gg.2[[i]][[j]][[5]][[3]] %>% SpatialPoints() %>% SpatialPixels()
# s = SpatialPixelsDataFrame(coor, data = dfr)
# proj4string(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# s = raster(s)
dfr <- gg.2[[i]][[j]][[5]][[3]]
dfr$X1 <- as.numeric(as.factor(dfr$X1))
dfr$X2 <- as.numeric(as.factor(dfr$X2))
coordinates(dfr) <- c('X1', 'X2')
proj4string(dfr) <- CRS("+init=epsg:4326")
writeOGR(dfr, "dfr", "dfr", driver = "ESRI Shapefile")
s <- SpatialPointsDataFrame(dfr, data = dfr,
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
s = SpatialPixelsDataFrame(dfr[,c('X1', 'X2')], data = dfr)
crs(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
s = raster(s)
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
###plot map##
if (gg.2[[i]][[j]][[2]][[1]] == 1){ #type = 1
map <- addPolylines(map, data= m, color='blue', popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 2
map <- addPolygons(map, data = m, color = 'red' ,popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]), fill=FALSE)
} else if(gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){ #type = 3|4
#map <- addRasterImage(map, s, color = palette[j] ,opacity = 0.7 ) %>%
#addMarkers(mean(dfr[[1]]), mean(dfr[[2]]), label = paste(gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
}
}
#gg.2<-fault.srcin
for (i in c(1:(length(gg.2)))){
for (j in c(1:(length(gg.2[[i]])))){
if ( gg.2[[i]][[j]][[2]][[1]] == 1 | gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 1|2
m <- data.matrix(gg.2[[i]][[j]][[length(gg.2[[i]][[j]])]])
} else if( gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){
#dfr<-gg.2[[i]][[j]][[5]][[2]]
# dfr <- gg.2[[i]][[j]][[5]][[3]] %>% SpatialPoints() %>% SpatialPixels()
# s = SpatialPixelsDataFrame(coor, data = dfr)
# proj4string(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# s = raster(s)
# dfr <- gg.2[[i]][[j]][[5]][[3]]
# dfr$X1 <- as.numeric(as.factor(dfr$X1))
# dfr$X2 <- as.numeric(as.factor(dfr$X2))
# coordinates(dfr) <- c('X1', 'X2')
# proj4string(dfr) <- CRS("+init=epsg:4326")
# writeOGR(dfr, "dfr", "dfr", driver = "ESRI Shapefile")
#
# s <- SpatialPointsDataFrame(dfr, data = dfr,
#                             proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
#
# s = SpatialPixelsDataFrame(dfr[,c('X1', 'X2')], data = dfr)
# crs(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# s = raster(s)
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
###plot map##
if (gg.2[[i]][[j]][[2]][[1]] == 1){ #type = 1
map <- addPolylines(map, data= m, color='blue', popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 2
map <- addPolygons(map, data = m, color = 'red' ,popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]), fill=FALSE)
} else if(gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){ #type = 3|4
#map <- addRasterImage(map, s, color = palette[j] ,opacity = 0.7 ) %>%
#addMarkers(mean(dfr[[1]]), mean(dfr[[2]]), label = paste(gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
}
}
map<-leaflet() %>% addTiles()
gg.2 <- test3
#gg.2<-fault.srcin
for (i in c(1:(length(gg.2)))){
for (j in c(1:(length(gg.2[[i]])))){
if ( gg.2[[i]][[j]][[2]][[1]] == 1 | gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 1|2
m <- data.matrix(gg.2[[i]][[j]][[length(gg.2[[i]][[j]])]])
} else if( gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){
#dfr<-gg.2[[i]][[j]][[5]][[2]]
# dfr <- gg.2[[i]][[j]][[5]][[3]] %>% SpatialPoints() %>% SpatialPixels()
# s = SpatialPixelsDataFrame(coor, data = dfr)
# proj4string(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# s = raster(s)
# dfr <- gg.2[[i]][[j]][[5]][[3]]
# dfr$X1 <- as.numeric(as.factor(dfr$X1))
# dfr$X2 <- as.numeric(as.factor(dfr$X2))
# coordinates(dfr) <- c('X1', 'X2')
# proj4string(dfr) <- CRS("+init=epsg:4326")
# writeOGR(dfr, "dfr", "dfr", driver = "ESRI Shapefile")
#
# s <- SpatialPointsDataFrame(dfr, data = dfr,
#                             proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
#
# s = SpatialPixelsDataFrame(dfr[,c('X1', 'X2')], data = dfr)
# crs(s) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# s = raster(s)
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
###plot map##
if (gg.2[[i]][[j]][[2]][[1]] == 1){ #type = 1
map <- addPolylines(map, data= m, color='blue', popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 2){ #type = 2
map <- addPolygons(map, data = m, color = 'red' ,popup = paste(sep = "<br/>",names(gg.2)[i],gg.2[[i]][[j]][[1]]), fill=FALSE)
} else if(gg.2[[i]][[j]][[2]][[1]] == 3 | gg.2[[i]][[j]][[2]][[1]] == 4){ #type = 3|4
#map <- addRasterImage(map, s, color = palette[j] ,opacity = 0.7 ) %>%
#addMarkers(mean(dfr[[1]]), mean(dfr[[2]]), label = paste(gg.2[[i]][[j]][[1]]))
} else if(gg.2[[i]][[j]][[2]][[1]] == 5 | gg.2[[i]][[j]][[2]][[1]] == -5){
#type=5
}
}
}
map
data(hazteest0211)
library(haztest0211)
setwd("~")
library(haztest0211)
path <- '/Users/chieh/Desktop/Sinotech_08/TW_all/data source'
faultfile <- 'AllSource_NTW_WM#6_0531.dat'
setwd(path)
library(HAZ.TW)
ff <- figinfo('/Users/chieh/Desktop/Sinotech_08/TW_all/data source/SSHAC_Fault.TAB','ff1.txt')
tabfile <- 'SSHAC_Fault.TAB'
dfall <- st_read(tabfile) %>% data.frame()
#df = data exclude lon/lat geometry
df <- dfall[, -which(names(dfall) == 'geometry')]
df <- data.frame(lapply(df, as.character), stringsAsFactors = FALSE)
##extract lon/lat geometry
df_lonlat <- dfall[, which(names(dfall) == 'geometry')]
library(magg)
library(magrittr)
library(sf)
dfall <- st_read(tabfile) %>% data.frame()
#df = data exclude lon/lat geometry
df <- dfall[, -which(names(dfall) == 'geometry')]
df <- data.frame(lapply(df, as.character), stringsAsFactors = FALSE)
##extract lon/lat geometry
df_lonlat <- dfall[, which(names(dfall) == 'geometry')]
for (i in 1:length(df_lonlat)){
n1 <- df_lonlat [[i]] %>% as.numeric() %>% unlist()
n1 <- matrix(n1, (length(n1)/2), 2, byrow = FALSE) %>% data.frame()
df$npts[i] <- nrow(n1)
n2 <- sapply(1:nrow(n1), function(j){
paste(n1[j, 1], n1[j, 2], sep = '\t')
})
df$lonlat[i] <- paste(n2, collapse = '\n')
}
View(dfall)
##combine and remove
combine_all <- function(char, df){
value_df <- df[, grep(char, names(df))]
value = data.frame()
for (i in 1:nrow(value_df)){
value[i,1] <- do.call(paste, value_df[i, ])
}
vtitle <- combine_words(names(value_df), sep = " ", and = ' ') %>% as.character() #library(knitr)
df[, grep(char, names(df))] <- NULL
df <- cbind(df, value)
colnames(df)[ncol(df)] <- vtitle
return(df)
}
df <- combine_all('SR', df)
df <- combine_all('VR', df)
df <- combine_all('Dip', df)
library(knitr)
df <- combine_all('SR', df)
df <- combine_all('VR', df)
df <- combine_all('Dip', df)
df <- combine_all('Depth', df)
View(df)
setwd("~/Desktop/Sinotech_08/HAZ.TW")
devtools::load_all()
devtools::document()
devtools::build()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::build()
devtools::build()
devtools::check()
